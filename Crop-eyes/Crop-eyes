import cv2
import mediapipe as mp
import matplotlib.pyplot as plt

# Inizializzazione del rilevatore di landmark facciali di MediaPipe
mp_drawing = mp.solutions.drawing_utils
mp_face_mesh = mp.solutions.face_mesh

# Carica l'immagine da Google Drive
from google.colab import drive
drive.mount('/content/drive')
image_path = '/content/drive/MyDrive/Tirocinio/frame6.jpg'
image = cv2.imread(image_path)

# Inizializzazione del rilevatore di landmark facciali e ottengo i landmark
with mp_face_mesh.FaceMesh(
    static_image_mode=True, max_num_faces=1, 
    min_detection_confidence=0.5, min_tracking_confidence=0.5) as face_mesh:
    results = face_mesh.process(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))
    landmarks = results.multi_face_landmarks


if landmarks:
    # Trovare i landmark corrispondenti agli occhi.
    # Utilizzo 33-48 per l'occhio sinistro e 263-280 per l'occhio destro
    left_eye_landmarks = landmarks[0].landmark[33:48]
    right_eye_landmarks = landmarks[0].landmark[263:280]

# Calcolo dei punti estremi dell'eye region per entrambi gli occhi.
# Provo per adesso ad utilizzare il valore massimo e minimo delle coordinate x e y dei landmark per avere il rettangolo che contiene l'occhio.
left_eye_x = [int(landmark.x * image.shape[1]) for landmark in left_eye_landmarks]
left_eye_y = [int(landmark.y * image.shape[0]) for landmark in left_eye_landmarks]
right_eye_x = [int(landmark.x * image.shape[1]) for landmark in right_eye_landmarks]
right_eye_y = [int(landmark.y * image.shape[0]) for landmark in right_eye_landmarks]

left_eye_min_x = min(left_eye_x)
left_eye_max_x = max(left_eye_x)
left_eye_min_y = min(left_eye_y)
left_eye_max_y = max(left_eye_y)

right_eye_min_x = min(right_eye_x)
right_eye_max_x = max(right_eye_x)
right_eye_min_y = min(right_eye_y)
right_eye_max_y = max(right_eye_y)

# Qui faccio il cropping degli occhi dall'immagine originale
left_eye_region = image[left_eye_min_y:left_eye_max_y, left_eye_min_x:left_eye_max_x]
right_eye_region = image[right_eye_min_y:right_eye_max_y, right_eye_min_x:right_eye_max_x]

# Se ora visualizzassi left_eye_region e right_eye_region sarebbero troppo grandi, quindi le ridimensiono

display_width = 200  # Questa variabile mi dice la larghezza dell'immagine da visualizzare

# Ridimensiono le due immagini degli occhi
left_eye_display = cv2.resize(left_eye_region, (display_width, int(display_width * left_eye_region.shape[0] / left_eye_region.shape[1])))
right_eye_display = cv2.resize(right_eye_region, (display_width, int(display_width * right_eye_region.shape[0] / right_eye_region.shape[1])))

# Visualizzo le immagini messe nella dimensione che desidero
plt.figure(figsize=(6, 3))
plt.subplot(1, 2, 1)
plt.imshow(cv2.cvtColor(left_eye_display, cv2.COLOR_BGR2RGB))
plt.title("Eye sinistro")
plt.axis('off')

plt.subplot(1, 2, 2)
plt.imshow(cv2.cvtColor(right_eye_display, cv2.COLOR_BGR2RGB))
plt.title("Eye destro")
plt.axis('off')

plt.show()

# Qui salvo le due immagini dei due occhi nella cartella Output su drive
#cv2.imwrite('/content/drive/MyDrive/Tirocinio/Output/left_eye.jpg', left_eye_display)
#cv2.imwrite('/content/drive/MyDrive/Tirocinio/Output/right_eye.jpg', right_eye_display)
